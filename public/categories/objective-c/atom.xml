<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | OiNutter.co.uk]]></title>
  <link href="http://oinutter.co.uk/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://oinutter.co.uk/"/>
  <updated>2012-07-15T14:35:52+01:00</updated>
  <id>http://oinutter.co.uk/</id>
  <author>
    <name><![CDATA[Will McKenzie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Announcing Coderwall for iOS]]></title>
    <link href="http://oinutter.co.uk/2012/06/03/announcing-coderwall-for-ios/"/>
    <updated>2012-06-03T14:22:00+01:00</updated>
    <id>http://oinutter.co.uk/2012/06/03/announcing-coderwall-for-ios</id>
    <content type="html"><![CDATA[<p>After 2 months of wrestling with the App Store review process, I am proud to announce the release of my first iOS app, <a href="http://oinutter.github.com/Coderwall-iOS">Coderwall</a>. The app accesses <a href="http://coderwall.com">Coderwall.com</a>'s API and pulls down all your profile information and your list of achievements etc, and displays it in a native format, giving you access to your, and your friends', information on the go.</p>

<p>At the moment the app is a very basic read only affair as Coderwall's API is read only, but I know they have plans to expand on the API, particularly to enable access to some of the new features they are adding to the main site, and as they do I'll be updating the app to take advantage of those.</p>

<p>The app is free to download for both iPhone and iPad, and also the source is available on <a href="https://github.com/OiNutter/Coderwall-iOS">GitHub</a> for anyone wanting to take a look and use it to help them get started in app development. The app was very much a learning exercise for me, which is why I've made it free to download and open sourced it, in the hope that the lessons I've learned will benefit someone else.</p>

<p>Also if you have any issues, or feature requests, you can use GitHub to tell me about them, or even submit a pull request for them.</p>

<p>There will be a Windows Phone version released, hopefully, in the next few months, will post more about that when it is released, and once I've got that out of the way I'm going to be looking at adding more functionality to both apps, so watch this space!</p>

<p>I'd like to say a big thanks to the guys at Coderwall, particularly Matt, who have been really helpful and supportive of me while I've been building this app, particularly in making extra information available to me via the API and in offering to add more functionality so we can make the app even better. Thanks very much guys, hope you like it!</p>

<p><a href="http://oinutter.github.com/Coderwall-iOS">Coderwall-iOS</a> |
<a href="http://itunes.apple.com/us/app/coderwall/id520035280?ls=1&amp;mt=8">On The App Store</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C and iOS Development - Taking My First Steps]]></title>
    <link href="http://oinutter.co.uk/2011/08/26/objective-c-and-ios-development-taking-my-first-steps/"/>
    <updated>2011-08-26T00:00:00+01:00</updated>
    <id>http://oinutter.co.uk/2011/08/26/objective-c-and-ios-development-taking-my-first-steps</id>
    <content type="html"><![CDATA[<p>I recently managed to get myself a Macbook, which besides finally giving me a home computer that can cope with what I'm throwing at it, has finally enabled me to start looking at iOS development. I've briefly
played with Android development but what little Java skills I picked up at university and was able to remember after all this time weren't quite up to the task. So you'd think that tackling developing in
Objective-C, a language I've never used, would be an even bigger challenge right? Well thankfully I managed to find some help, primarily from iTunes U. If anyone hasn't checked this out yet I'd highly recommend
it, there are a load of free to download lectures from several of the big universities on there (primarily US from what I could see but there were some others). The course I've been following is Stanford's
<a href="http://itunes.apple.com/us/podcast/cs193p-student-final-projects/id395605774?i=90218598" title="iTunes U Download for C193p">cs193p</a> course on iOS application development by Paul Hegarty. If you can get past Paul's
slightly eccentric seeming nature, anyone wanting to get into iOS development would do well to check this out. I'm only a few lectures in at the moment but the course has already succeeded in helping me finally
get my head around MVC.</p>

<p>So what do I think of Objective-C? Well I'm still in my early stages of playing with the language so this is really just a first impression but I think I'm going to like developing in it, and I certainly think
I'm going to find it easier and more enjoyable than I ever did Java. It's very different from most of the languages I've ever learned and certainly a huge change from the languages I use on a daily basis (PHP
and Javascript). One of the first things I've noticed is how verbose it is. There is very much a convention of the code reading like plain english, with things such as long variable names and methods. The way
methods are defined is one of the primary examples I would give of this verbosity, and of the difference of Objective-C to languages I'm used to. The following examples show a comparison of how methods are
defined in Actionscript 3 (I know, I know, but it's the only langauge I know well enough to write comparison code in that defines the return and argument types) and Objective-C.</p>

<p><div><script src='https://gist.github.com/1171831.js?file=as3style.as'></script>
<noscript><pre><code>//Actionscript 3 - Method Definitions

//single argument methods
public function doubleNumber(double: number):double;

//multiple argument methods
public function multiplyNumberByAnotherNumber(double: number1,double: number2):double;</code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/1171831.js?file=objcstyle.m'></script>
<noscript><pre><code>//Objective-C Method Definitions

//single argument method
- (double) doubleNumber:(double)number;

//mulitple argument method
- (double) multiplyNumber:(double)number1 byAnotherNumber:(double)number2;

</code></pre></noscript></div>
</p>

<p>As you can see the single argument methods are pretty straight forward, return type at the start, followed by the method name, then the argument and it's type listed after a semi colon (felt weird having no
brackets). From what I've seen there doesn't seem to be any indication of public or private with the method definitions. What seems to happen is that you just don't define methods you want to be private in your
header file, which defines the class' public api. The - at the start of the definition indicates that this is an instance method, a + indicates a static method. The primary difference in the way methods are
defined is when it comes to methods with multiple arguments, where you see this splitting of the method name. The only real purpose I can see of this is that if you write your method names and variables properly
it helps the code read like plain english.</p>

<p>As for developing in XCode, so far I'm liking it. The built-in Interface Builder Gui tools are really helpful, especially when it comes to linking the controller to your views.  It's taking me a little while to
find everything in the property inspectors, possibly because what I'm looking for isn't available for customisation but you never know. The in-line error and warning highlighting is really helpful as it makes it
much easier to see where you've missed that semi-colon or curly brace. I think I'm really going to like the property synthesization (more on that once I've gone more in-depth with it) that allows the compiler to
auto generate methods for you.</p>

<p>Developing for iOS is going to present me with some new challenges that I wouldn't normally have to contend with such as Memory Management, which is going to take some getting used to, but that's half the fun.
So hopefully before too long I'll be posting about my new app that you can all go and buy and make me millions, (although based on how many readers I probably have  I might be lucky to make a pound!).  I promise
it won't be a new fart app!</p>
]]></content>
  </entry>
  
</feed>
